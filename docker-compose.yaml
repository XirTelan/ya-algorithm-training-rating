services:
  mongodb:
    image: mongo
    container_name: mongo
    restart: always
    env_file:
      - ./.env
    volumes:
      - ./configs/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL}
      ME_CONFIG_BASICAUTH: true
      ME_CONFIG_BASICAUTH_USERNAME: $ME_WEB_USERNAME
      ME_CONFIG_BASICAUTH_PASSWORD: $ME_WEB_PASSWORD
    depends_on:
      - mongodb
    ports:
      - 8081:8081

  backend:
    container_name: "backend"
    restart: always
    build:
      context: ./apps/backend/
      dockerfile: dockerfile
    depends_on:
      - mongodb
    env_file:
      - ./.env
    expose:
      - 3000

  backend-gui:
    container_name: "backend-gui"
    build:
      context: .
      dockerfile: ./apps/backend-gui/dockerfile
    depends_on:
      - backend

  frontend:
    container_name: "frontend"
    build:
      context: .
      dockerfile: ./apps/frontend/dockerfile
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
volumes:
  mongodb:
